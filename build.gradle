buildscript {
    ext {
        springBootVersion = '1.3.0.BUILD-SNAPSHOT'
    }
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }

    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:0.4.0.RELEASE"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'io.codearte.accurest:accurest-gradle-plugin:0.8.1'
    }
}

apply plugin: "io.spring.dependency-management"

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-starter-parent:Brixton.BUILD-SNAPSHOT'
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }


    task loadVersion {
        ext.myVersion = new File('number').text.trim()
    }

    task manifestFilter(type: Copy) {
        from 'manifest.yml'
        into 'versioned-manifest'
        expand(version: "${loadVersion.myVersion}")
    }

}

subprojects {
    apply plugin: 'spring-boot'
    apply plugin: 'groovy'
    apply plugin: 'maven-publish'
    apply plugin: 'accurest'

    group = 'sample'
    version = new File('number').text.trim()

    ext {
        contractsDir = new File("$projectDir/src/test/resources/stubs")
        wiremockStubsOutputDirRoot = file("${project.buildDir}/generated-sources/${project.name}-stubs")
        wiremockStubsOutputDir = new File(wiremockStubsOutputDirRoot, "mappings")
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    task stubsJar(type: Jar, dependsOn: ["generateAccurest", "generateWiremockClientStubs"]) {
        baseName = "${project.name}-stubs"
        from wiremockStubsOutputDirRoot
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
        archives stubsJar
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java

                artifact sourcesJar {
                    classifier "sources"
                }

                artifact javadocJar {
                    classifier "javadoc"
                }
            }
            stubs(MavenPublication) {
                artifactId "${project.name}-stubs"
                artifact stubsJar
            }
        }
    }
    dependencies {
        compile("org.springframework.boot:spring-boot-starter-web")
        compile("org.springframework.boot:spring-boot-starter-actuator")
        compile("org.springframework.cloud:spring-cloud-starter-zookeeper-discovery:1.0.0.BUILD-SNAPSHOT")
        compile 'org.projectlombok:lombok:1.16.4'
        testCompile("org.springframework.boot:spring-boot-starter-test")
    }

}

project(':fooconsumer') {
    jar {
        baseName = 'fooconsumer'
    }

    accurest {
        testMode = 'MockMvc'
        //baseClassForTests = 'sample.provider.BaseMockMvcSpec'
        basePackageForTests = 'sample.consumer'
        contractsDslDir = contractsDir
        //stubsOutputDir = new File("${project.buildDir}/production/${project.name}-stubs/mappings/")
        stubsOutputDir = wiremockStubsOutputDir
    }

    dependencies {
        compile "com.ofg:stub-runner-spring:0.9.4-SNAPSHOT"
        compile "org.codehaus.groovy.modules.http-builder:http-builder:0.7.1"
    }
}


project(':fooprovider') {
    apply plugin: 'groovy'

    accurest {
        testMode = 'MockMvc'
        baseClassForTests = 'sample.provider.BaseMockMvcSpec'
        basePackageForTests = 'sample.provider'
        contractsDslDir = contractsDir
        //stubsOutputDir = new File("${project.buildDir}/production/${project.name}-stubs/mappings/")
        stubsOutputDir = wiremockStubsOutputDir
    }

    dependencies {
        testCompile 'io.codearte.accurest:accurest-core:0.8.1'
        testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
        testCompile 'com.jayway.restassured:rest-assured:2.4.0'
        testCompile 'com.jayway.restassured:spring-mock-mvc:2.4.0' // needed if you're going to use Spring MockMvc
    }
    test.dependsOn { [generateAccurest, generateWireMockClientStubs] } //See: https://github.com/Codearte/accurest/issues/36

}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
